// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UZonMailService.Models.MySql;

#nullable disable

namespace UZonMailService.Migrations.MySql
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20240622102545_initMysql")]
    partial class initMysql
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EmailTemplateSendingGroup", b =>
                {
                    b.Property<int>("SendingGroupId")
                        .HasColumnType("int");

                    b.Property<int>("TemplatesId")
                        .HasColumnType("int");

                    b.HasKey("SendingGroupId", "TemplatesId");

                    b.HasIndex("TemplatesId");

                    b.ToTable("EmailTemplateSendingGroup");
                });

            modelBuilder.Entity("FileUsageSendingGroup", b =>
                {
                    b.Property<int>("AttachmentsId")
                        .HasColumnType("int");

                    b.Property<int>("SendingGroupId")
                        .HasColumnType("int");

                    b.HasKey("AttachmentsId", "SendingGroupId");

                    b.HasIndex("SendingGroupId");

                    b.ToTable("FileUsageSendingGroup");
                });

            modelBuilder.Entity("FileUsageSendingItem", b =>
                {
                    b.Property<int>("AttachmentsId")
                        .HasColumnType("int");

                    b.Property<int>("SendingItemId")
                        .HasColumnType("int");

                    b.HasKey("AttachmentsId", "SendingItemId");

                    b.HasIndex("SendingItemId");

                    b.ToTable("FileUsageSendingItem");
                });

            modelBuilder.Entity("OutboxSendingGroup", b =>
                {
                    b.Property<int>("OutboxesId")
                        .HasColumnType("int");

                    b.Property<int>("SendingGroupId")
                        .HasColumnType("int");

                    b.HasKey("OutboxesId", "SendingGroupId");

                    b.HasIndex("SendingGroupId");

                    b.ToTable("OutboxSendingGroup");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.EmailSending.SendingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BccBoxes")
                        .HasColumnType("longtext");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<string>("CcBoxes")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<string>("Inboxes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDistributed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastMessage")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SendEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SendStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SendingType")
                        .HasColumnType("int");

                    b.Property<int>("SentCount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subjects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SuccessCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SendingGroups");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.EmailSending.SendingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BCC")
                        .HasColumnType("longtext");

                    b.Property<string>("CC")
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<int>("EmailTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("FromEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("Inboxes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSendingBatch")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OutBoxId")
                        .HasColumnType("int");

                    b.Property<int>("ProxyId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiptId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SendResult")
                        .HasColumnType("longtext");

                    b.Property<int>("SendingGroupId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.Property<int>("TriedCount")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SendingGroupId");

                    b.ToTable("SendingItems");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Emails.EmailGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailGroups");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Emails.Inbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoxType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Domain")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmailGroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LinkCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailGroupId");

                    b.ToTable("Inboxes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Inbox");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Files.FileBucket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BucketName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RootDir")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("FileBuckets");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Files.FileObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FileBucketId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LinkCount")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sha256")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FileBucketId");

                    b.ToTable("FileObjects");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Files.FileReader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FileObjectId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileObjectId");

                    b.ToTable("FileReaders");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Files.FileUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FileObjectId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OwnerUserId")
                        .HasColumnType("int");

                    b.Property<string>("UniqueName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FileObjectId");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("FileUsages");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Permission.PermissionCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("PermissionCodes");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Permission.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Permission.RolePermissionCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PermissionCodeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RolePermissionCodes");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Permission.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Settings.SystemSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("InitializedQuartz")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Settings.UserProxy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsShared")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MatchRegex")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Proxy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserProxies");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Settings.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxOutboxCooldownSecond")
                        .HasColumnType("int");

                    b.Property<int>("MaxSendCountPerEmailDay")
                        .HasColumnType("int");

                    b.Property<int>("MaxSendingBatchSize")
                        .HasColumnType("int");

                    b.Property<int>("MinOutboxCooldownSecond")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Templates.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.UserInfos.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("ForbiddenToLogin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystemUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Emails.Outbox", b =>
                {
                    b.HasBaseType("UZonMailService.Models.SQL.Emails.Inbox");

                    b.Property<bool>("EnableSSL")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxSendCountPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProxyId")
                        .HasColumnType("int");

                    b.Property<int>("SentTotalToday")
                        .HasColumnType("int");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SmtpPort")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Outbox");
                });

            modelBuilder.Entity("EmailTemplateSendingGroup", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.EmailSending.SendingGroup", null)
                        .WithMany()
                        .HasForeignKey("SendingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UZonMailService.Models.SQL.Templates.EmailTemplate", null)
                        .WithMany()
                        .HasForeignKey("TemplatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileUsageSendingGroup", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.Files.FileUsage", null)
                        .WithMany()
                        .HasForeignKey("AttachmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UZonMailService.Models.SQL.EmailSending.SendingGroup", null)
                        .WithMany()
                        .HasForeignKey("SendingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileUsageSendingItem", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.Files.FileUsage", null)
                        .WithMany()
                        .HasForeignKey("AttachmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UZonMailService.Models.SQL.EmailSending.SendingItem", null)
                        .WithMany()
                        .HasForeignKey("SendingItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OutboxSendingGroup", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.Emails.Outbox", null)
                        .WithMany()
                        .HasForeignKey("OutboxesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UZonMailService.Models.SQL.EmailSending.SendingGroup", null)
                        .WithMany()
                        .HasForeignKey("SendingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.EmailSending.SendingItem", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.EmailSending.SendingGroup", "SendingGroup")
                        .WithMany()
                        .HasForeignKey("SendingGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SendingGroup");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Emails.EmailGroup", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.UserInfos.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Emails.Inbox", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.Emails.EmailGroup", null)
                        .WithMany("Inboxes")
                        .HasForeignKey("EmailGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Files.FileObject", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.Files.FileBucket", "FileBucket")
                        .WithMany()
                        .HasForeignKey("FileBucketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FileBucket");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Files.FileReader", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.Files.FileObject", "FileObject")
                        .WithMany()
                        .HasForeignKey("FileObjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FileObject");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Files.FileUsage", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.Files.FileObject", "FileObject")
                        .WithMany()
                        .HasForeignKey("FileObjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UZonMailService.Models.SQL.UserInfos.User", "OwnerUser")
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FileObject");

                    b.Navigation("OwnerUser");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Permission.PermissionCode", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.Permission.Role", null)
                        .WithMany("PermissionCodes")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Permission.UserRole", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.Permission.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UZonMailService.Models.SQL.UserInfos.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.UserInfos.User", b =>
                {
                    b.HasOne("UZonMailService.Models.SQL.Permission.Role", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Emails.EmailGroup", b =>
                {
                    b.Navigation("Inboxes");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.Permission.Role", b =>
                {
                    b.Navigation("PermissionCodes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("UZonMailService.Models.SQL.UserInfos.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
